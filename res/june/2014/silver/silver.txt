</script><table><tr><td>
<canvas id="battleshipCanvas" width="726" height="726"></canvas>
</td>
<td style="vertical-align:top;align-items:center">
<div class="loader"></div>
<div style="margin-left:100px" id="disclaimer"> *** Additional games are running in the background *** </div>

<div id="results" style="display:none">
	<H1 style="margin-left:40px"> Results </H1>
	<h3 style="margin-left:50px"> Number of games run: </h4>
	<p style="margin-left:100px"id = "gamesRun"></p>
	<h3 style="margin-left:50px">Average Accuracy:</h4>
	<p style="margin-left:100px"id="answer"></p>
</div>
</td>
</tr>
</table>
<div id="justForFun"></div>

<script>

	function BattleShip(pixels,draw){
		if (draw){
			this.canvas = document.getElementById("battleshipCanvas");
			this.canvas.width = pixels*11;
			this.canvas.height = pixels*11;
			this.ctx = this.canvas.getContext("2d");
		}		
		this.pixels = pixels;
		this.rows = [];
		this.columns = [];
		this.radius = pixels * .4;
		for (var i = 0; i < 10; i++) {
			this.rows[i] = pixels*1.5 + pixels *i;
			this.columns[i] = pixels*.5 + pixels *i;
		}
		this.gameBoard = [];
		for (var i = 0; i < 10 ; i++){
			this.gameBoard[i] = [];	
		}
		
		
		this.drawBoard = function(){
			ctx = this.ctx;
			ctx.fillStyle = "#65C2C9";
			ctx.fillRect(this.pixels,0,this.pixels*10, this.pixels*10);
			var letters = ["A", "B", "C", "D", "E", "F", "G","H", "I", "J"]
			for (var i = 0; i < 11; i++) { 
				ctx.moveTo(0,this.pixels*i);
				ctx.lineTo(this.pixels*11,this.pixels*i);
				ctx.stroke();
				
				ctx.moveTo(this.pixels+this.pixels*i, 0);
				ctx.lineTo(this.pixels+this.pixels*i, this.pixels*11);
				ctx.stroke();
				
				if (i != 10){
					ctx.font = "30px Arial";
					ctx.fillStyle = "#FFFFFF";
					ctx.fillText(i,this.pixels/2-10,this.pixels/2+this.pixels*i+10);
					ctx.fillText(i, this.pixels*1.3 + this.pixels*i, this.pixels*10.7);
				}
				
				
			}

		}
		
		this.drawShip = function (p1, p2){
			ctx.beginPath()
			ctx = this.ctx;
			ctx.arc(this.rows[p1[0]], this.columns[p1[1]], this.radius, 0, 2*Math.PI, false);
			ctx.fillStyle="#867970";
			ctx.fill();
			ctx.arc(this.rows[p2[0]], this.columns[p2[1]], this.radius, 0, 2*Math.PI, false);
			ctx.fill();
			
			if(p1[0] == p2[0]){
				var spaces = p2[1] - p1[1];
				ctx.fillRect(this.rows[p1[0]]-this.radius,this.columns[p1[1]], this.radius*2, this.rows[p2[1]]-this.rows[p1[1]]);
				for (var i = 0; i < spaces+1; i++){
					ctx.beginPath();
					ctx.arc(this.rows[p1[0]], this.columns[p1[1]+i], this.radius/3, 0, 2*Math.PI, false);
					ctx.fillStyle = "#000000";
					ctx.fill();
				}
			}else if(p2[1] == p2[1]){
				var spaces = p2[0] - p1[0];
				ctx.fillRect(this.rows[p1[0]],this.columns[p1[1]] - this.radius, this.rows[p2[0]]-this.rows[p1[0]],this.radius*2);
				for (var i = 0; i < spaces+1; i++){
					ctx.beginPath();
					ctx.arc(this.rows[p1[0]+i], this.columns[p1[1]], this.radius/3, 0, 2*Math.PI, false);
					ctx.fillStyle = "#000000";
					ctx.fill();
				}
			}
			
			
		}
		
		this.placeShips = function (sizes, draw){
			for (var y = 0; y <10; y++){
				for (var x = 0; x <10; x++){
					this.gameBoard[x][y]="o";
				}	
			}
			
			for (index = 0; index < sizes.length; ++index) {
				notPlaced = true;
				while (notPlaced) {
					shipX = Math.floor((Math.random() * 10) + 1) - 1;
					shipY = Math.floor((Math.random() * 10) + 1) - 1;
					direction = Math.floor((Math.random() * 2) + 1) - 1;
					if (shipX + sizes[index] < 10 ){
						noConflict = true;
						for (var i = 0 ; i < sizes[index] ; i++ ){
							if (direction == 0 && this.gameBoard[shipX + i][shipY] != "o"){
								noConflict = false;
							}else if (direction == 1 && this.gameBoard[shipX][shipY + i] != "o"){
								noConflict = false;
							}
						}
						if (noConflict){
							for (var i = 0 ; i < sizes[index] ; i++ ){
								if(direction == 0) {
									this.gameBoard[shipX + i][shipY] = "S";
								}else{
									this.gameBoard[shipX][shipY + i] = "S";
								}
							}
							notPlaced = false;
							if (draw){
								if (direction == 0){
									this.drawShip([shipX, shipY], [shipX + sizes[index]-1, shipY]);
								}else{
									this.drawShip([shipX, shipY], [shipX, shipY + sizes[index]-1]);
								}
							}
						}
					}
				}
			}
		}
		
		this.guess = function(coords,draw){
			coords = coords.split(",");
			x = coords[0];
			y = coords[1];
			
			if (this.gameBoard[x][y] == "S" || this.gameBoard[x][y] == "X"){
				this.gameBoard[x][y] = "X";
				if(draw){
					this.ctx.font = "45px Arial";
					this.ctx.fillStyle = "#FF0000";
					ctx.fillText("X",  this.rows[x]-this.pixels*.25,this.columns[y]+this.pixels*.25);
				}
			}else{
				if(draw){
					this.ctx.font = "45px Arial";
					this.ctx.fillStyle = "#FFFFFF";
					this.ctx.fillText("X", this.rows[x]-this.pixels*.25,this.columns[y]+this.pixels*.25);
				}
			}
			if (this.gameBoard[x][y] == "X"){
				return "HIT"
			}else{
				return "MISS"
			}
		}
		
		this.gameOver = function(draw){
			var isGameOver = true;
			for (var i = 0; i < this.gameBoard.length; i++){
				if ($.inArray("S",this.gameBoard[i]) != -1){
					isGameOver = false;
				}
			}
			return isGameOver;
		}
		
		this.getHitCount = function(){
			var hitCount = 0;
			for (var i = 0; i < this.gameBoard.length; i++){
				for (var j = 0; j < this.gameBoard.length; j++){
				if (this.gameBoard[i][j] == "X"){
					hitCount += 1;
				}
				}
			}
			return hitCount;
		}
		
		this.loseGame = function(){
			ctx.fillStyle = "rgba(255, 255, 255, 0.5)";
			ctx.fillRect(this.pixels,0,this.pixels*10, this.pixels*10);
			this.ctx.font = "65px Arial";
			this.ctx.fillStyle = "#FF0000";
			this.ctx.fillText("Failed to Sink All", this.canvas.width/7, this.canvas.height/3);
			this.ctx.fillText("Battleships!", this.canvas.width/4, this.canvas.height/2.25);
			this.ctx.fillText("   You Lose!", this.canvas.width/4.5, this.canvas.height/1.5);
		}
		
		this.endGame = function(){
			ctx.fillStyle = "rgba(255, 255, 255, 0.9)";
			ctx.fillRect(this.pixels,0,this.pixels*10, this.pixels*10);
			this.ctx.font = "65px Arial";
			this.ctx.fillStyle = "#FF0000";
			this.ctx.fillText("Battleships Sunk!", this.canvas.width/7, this.canvas.height/3);
			this.ctx.fillText("   You Win!", this.canvas.width/4, this.canvas.height/2);
		}
	}
	function guessLocation(x,y){
		ship.guess(x,y,true);
		ships = [5, 4, 4, 3, 3, 3, 2, 2, 2, 2];
		for (var games = 0; games <10; games++){
			for (var i = 0; i<100; i++){
				otherShip = new Battleship(60)
				otherShip.placeShips(ships,false)
				otherShip.guess(x,y,false)
			}
		}
	}
	
	

</script>
<script type="text/vbscript">

Function getShip
	Set getShip = new function_name
End Function

</script>
<script>

var BSGame = new BattleShip(60,true);
var DisplayGame = getShip();

	DisplayGame.init(10);
	BSGame.drawBoard();

	ships = [5, 4, 4, 3, 3, 3, 2, 2, 2, 2];
	//ships=[1];
	BSGame.placeShips(ships, true);
	moveCountArray = [];
	counter = 0;
	gameContinue = true;
	var guessArray = [];
	playGame();
	
	
function playGame(){
		var currentGuess = 0;
		var currentResult = "";
		if (counter < 100){
				if (gameContinue){
					displayGuess = DisplayGame.guess();
					currentResult = BSGame.guess(displayGuess, true);
					DisplayGame.listen(currentResult);
					if (BSGame.gameOver(true)){
						BSGame.endGame();
						gameContinue = false;
					}
				}
				
				counter += 1;
				for (var games = 0; games < 10; games++){
					currentGuess = playNonDisplayGame()
					guessArray.push(currentGuess);	
				}
				if (gameContinue){
					$("#justForFun").fadeIn("fast", function(){
						$("#justForFun").fadeOut("fast", function(){
							playGame();
						});
					});
				}else{
					playGame();
				}
			}else{
				$("#disclaimer").fadeOut("fast");
				var hitSum = 0;
				var guessSum = 0;
				$.each(guessArray,function(){hitSum+=parseFloat(this[0]) || 0;});
				$.each(guessArray,function(){guessSum+=parseFloat(this[1]) || 0;});
				$("#gamesRun").text(guessArray.length);
				var accuracy = (hitSum/guessSum*100).toString()
				if (accuracy.length > 5 ){
					$("#answer").text(accuracy.substring(0,5) + "%");
				}else{
					$("#answer").text(accuracy + "%");
				}
				if (gameContinue){
					BSGame.loseGame();
				}
				$(".loader").fadeOut("slow", function(){
					$("#results").fadeIn("slow");
				});
				//$("#answer").text(guessArray.join(","));
			}
			
				
			
		}
function playNonDisplayGame(){
	var guessCount = 0;
	var result = "";
	var Game = new BattleShip(12, false
	);
	var submission = getShip();
	submission.init(10);
	guess = submission.guess();
	Game.placeShips(ships,false);
	for (var i = 0; i < 100; i++){
		guessCount += 1;
		x =Math.floor((Math.random() * 10) + 0);;
		y = Math.floor((Math.random() * 10) + 0);;
		result = Game.guess(x+","+y,false);
		submission.listen(result);
		isGameOver = Game.gameOver(false);
		if (isGameOver){
			
			break;
		}
	}
	//if (guessCount == 100 && !isGameOver){
		hitCount = Game.getHitCount();
		if (hitCount != 0){
			return [hitCount, guessCount];
		}else{
			return 0;
		}
	//}else{
	//	var shipSum = 0;
	//	$.each(ships,function(){shipSum+=parseFloat(this) || 0;});
	//	return  shipSum/guessCount;
	//}
}
</script>
<script type="text/vbscript">